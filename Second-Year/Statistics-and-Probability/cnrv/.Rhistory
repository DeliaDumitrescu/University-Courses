roxygen2::roxygenize()
roxygen2::roxygenize()
roxygen2::roxygenize()
roxygen2::roxygenize()
library(cnrv)
roxygen2::roxygenize()
roxygen2::roxygenize()
library(cnrv)
roxygen2::roxygenize()
roxygen2::roxygenize()
roxygen2::roxygenize()
roxygen2::roxygenize()
library(cnrv)
detach("package:cnrv", unload = TRUE)
ls()
P
CV
roxygen2::roxygenize()
library(cnrv)
CV
CV
cnrv.CV
cnrv:CV
CV
detach("package:cnrv", unload = TRUE)
library(cnrv)
CV
outputCV
CV
P
intersection
detach("package:cnrv", unload = TRUE)
roxygen2::roxygenize()
CV
library(cnrv)
CV
P
CV
f
F
P
X <- function(x){
sigma = 5
miu = 100
( 1 / ( sigma * sqrt(2 * pi))) * exp( (-1/2) * (( x - miu) / sigma ) ^2)
}
f <- CV(X)
P ( f > 110 )
P( ( f < 99 ) | ( f < 100 ) )
f <- function(x){
sigma = 2
miu = 10
( 1 / ( sigma * sqrt(2 * pi))) * exp( (-1/2) * (( x - miu) / sigma ) ^2)
}
a = cdfFromPDF(f, -Inf)
plot(RGCDF(a,10000))
rm(list=ls())
roxygen2::roxygenize()
library(cnrv)
detach("package:cnrv", unload = TRUE)
P
CV
library(cnrv)
CV
P
detach("package:cnrv", unload = TRUE)
roxygen2::roxygenize()
library(cnrv)
detach("package:cnrv", unload = TRUE)
library(cnrv)
CV
outputCV
x = 5
detach("package:cnrv", unload = TRUE)
#' @export
normalizing_constant <- function (f)
{
tryCatch (
(1/(integrate(f, -Inf, +Inf) $ value)),
error = function (e) { print("Can't determine normalizing constant") }
)
}
g <- function (x)
{
f(x) / 50
}
normalizing_constant(g)
library(discreteRV)
(X <- RV(outcomes = 1:6, probs = 1/6))
(X <- RV(outcomes = 1:3, probs = (1, 2, 3)))
(X <- RV(outcomes = 1:3, probs = c(1, 2, 3)))
(X <- RV(outcomes = 1:3, probs = c((i/1000), (i/500), ((1000-3i)/1000)))
i <- 114
(X <- RV(outcomes = 1:3, probs = c((i/1000), (i/500), ((1000-3i)/1000)))
(X <- RV(outcomes = 1:3, probs = c((114/1000), (114/500), ((1000-3*114)/1000)))
(X <- RV(outcomes = 1:3, probs = c((114/1000), (114/500), ((1000-3*114)/1000)))
E(X^2)
X <- RV(outcomes = 1:3, probs = c((114/1000), (114/500), ((1000-3*114)/1000)))
E(X^2)
i <- 114
X <- RV(outcomes = 1:3, probs = c((i/1000), (i/500), ((1000-3*i)/1000)))
E(X^2)
i <- 114
X <- RV(outcomes = 1:3, probs = c((i/1000), (i/500), ((1000-3*i)/1000)))
E(X^2)
X <- RV(outcomes = 1:3, probs = c((i/1000), (i/500), ((1000-3*i)/1000)))
X
i <- 114
X <- RV(outcomes = 1:3, probs = c((i/1000), (i/500), ((1000-3*i)/1000)))
E(X^2)
